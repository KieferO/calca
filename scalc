#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from __future__ import print_function
from __future__ import division
from __future__ import unicode_literals

import sys
from math import *
from random import *
from datetime import *
import numpy
import argparse
import collections

from calca_utils import *

def get_args():
    parser = argparse.ArgumentParser(
        description='Apply a function to each line of input'
    )
    parser.add_argument(
        '--n',
        type=int,
        default=1,
        metavar='N',
        help='Process N lines of input per function call.'
    )
    parser.add_argument(
        'fun',
        help='Function to be called for each line of input.'
    )
    args = parser.parse_args()
    return args

def do_deque(args):
    active = collections.deque([], args.n)
    lines = file_eval(sys.stdin)
    fun = eval(args.fun)
    for _ in range(args.n - 1):
        active.append(next(lines))
    for line in lines:
        active.append(line)
        writeval(fun(active))

def main():
    args = get_args()
    fun = eval(args.fun)
    if args.n > 1:
        return do_deque(args)
    for line in seq_eval(sys.stdin):
        writeval(fun(*line))
    return 0

if __name__ == '__main__':
    sys.exit(main())
